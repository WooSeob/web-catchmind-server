{"version":3,"sources":["./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/model/game-model.ts","./src/app/controller/state/Ready.ts","./src/app/controller/state/Result.ts","./src/app/authentication.service.ts","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/model/chat-container.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/interfaces.ts","./src/app/draw.ts","./src/app/controller/state/Guess.ts","./src/app/model/user-container.ts","./src/app/controller/state/Prepare.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/storage.ts","./src/app/app.module.ts","./src/app/canvas/canvas.component.ts","./src/app/canvas/canvas.component.html","./src/app/controller/game-controller.ts","./src/app/room/room.component.ts","./src/app/room/room.component.html","./src/app/app-routing.module.ts","./src/app/controller/state/State.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { Socket } from 'socket.io-client';\nimport { ChatContainer } from 'src/app/model/chat-container';\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css'],\n})\nexport class ChatComponent implements OnInit {\n  @Input() chatContainer: ChatContainer;\n  @Input() socket: Socket;\n\n  public inputElement: HTMLInputElement;\n  public MsgToSend: string; // 보낼 채팅 메시지\n  constructor() {}\n\n  sendChat(): void {\n    if(this.MsgToSend !== \"\"){\n      this.socket.emit('chat-msg', this.MsgToSend);\n      this.inputElement.value = \"\"\n      this.MsgToSend = \"\"\n    }else{\n      alert(\"메시지를 입력해 주세요.\")\n    }\n  }\n\n  ngOnInit(): void {\n    this.inputElement = <HTMLInputElement> document.getElementById('chat-input') \n  }\n}\n","<div class=\"chattingView\">\n  <div *ngFor=\"let chat of chatContainer.chats\" style=\"padding: 0px\">\n    <div class=\"row msg\" *ngIf=\"chat.isSystem\">\n      <span style=\"color: red\">{{ chat.data }}</span>\n    </div>\n    <div class=\"row msg\" *ngIf=\"!chat.isSystem\">\n      <div\n        class=\"col-4 col-md-5 col-lg-4\"\n        style=\"\n          padding-right: 4px;\n          padding-left: 0px;\n          border-right: 1px dashed lightgray;\n        \"\n      >\n        {{ chat.from }}\n      </div>\n      <div class=\"col-8 col-md-7 col-lg-8\" style=\"padding-right: 0px; padding-left: 6px\">\n        {{ chat.data }}\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"input-group mb-3\">\n  <input\n    [(ngModel)]=\"MsgToSend\"\n    type=\"text\"\n    class=\"form-control\"\n    placeholder=\"메시지를 입력하세요.\"\n    aria-describedby=\"basic-addon2\"\n    id=\"chat-input\"\n    (keydown.enter)=\"sendChat()\"\n  />\n  <div class=\"input-group-append\">\n    <button (click)=\"sendChat()\" class=\"btn btn-outline-primary\" type=\"button\">\n      전송\n    </button>\n  </div>\n</div>\n","import { StateType, User } from '../interfaces';\nimport { CanvasController } from '../draw';\nimport { Chat, ChatContainer } from './chat-container';\nimport { UserContainer } from './user-container';\nimport { Hit } from '../controller/state/Guess';\nexport class GameModel {\n  public mySelf: User;\n\n  public turn: string;\n  public round: number;\n\n  public isGuess: boolean = false;\n  public isPrepare: boolean = false;\n  public isResult: boolean = false;\n  public isReady: boolean = false;\n\n  public words: string[] = []; // 제시된 세가지 단어\n  public word: string = ''; // 현재 단어\n  public wordSecret: string = ''; //가려진 현재 단어\n\n  public isInGame: boolean = false;\n  public myTurn: boolean = false;\n\n  public timerRun: boolean = false;\n  public remainTime: number = 0;\n\n  public turnResult:Hit[];\n\n  constructor(mySelf: User) {\n    this.init(mySelf)\n  }\n\n  public init(mySelf: User){\n    this.mySelf = mySelf;\n\n    this.isGuess = false;\n    this.isPrepare = false;\n    this.isResult = false;\n    this.isReady = false;\n    \n    this.words = []\n    this.word = ''\n    this.wordSecret = ''\n    \n    this.isInGame = false\n    this.myTurn = false\n    \n    this.timerRun = false\n    this.remainTime = 0\n  }\n  public startGame(participants: string[]) {\n    // 게임 시작\n    this.setParticipants(participants);\n    ChatContainer.getInstance().push(Chat.SysMsg('<<게임 시작>>'));\n  }\n\n  public clearGame() {\n    // 게임 종료\n    this.timerRun = false;\n    this.myTurn = false;\n    this.word = '';\n    this.wordSecret = '';\n    ChatContainer.getInstance().push(Chat.SysMsg('<<게임이 끝났습니다.>>'));\n    UserContainer.getInstance().PUsersList.forEach((u) => {\n      let msg: string = `${u.getName()} : ${u.score.score} 점`;\n      ChatContainer.getInstance().push(Chat.SysMsg(msg));\n    });\n    UserContainer.getInstance().resetParticipants();\n  }\n  public setTimer(time: number) {\n    this.remainTime = time;\n  }\n  public setWords(words: string[]) {\n    this.words = words;\n  }\n  public setTurn(turn: string) {\n    if (this.turn != turn) {\n      // turn changed\n      this.turn = turn;\n\n      //clear turn\n      this.words = [];\n      this.word = '';\n      this.wordSecret = '';\n      UserContainer.getInstance().resetCorrect();\n\n      UserContainer.getInstance().changeTurn(this.turn);\n      this.myTurn = this.turn == this.mySelf.getName();\n      this.word = '';\n      CanvasController.getInstance().clear();\n      ChatContainer.getInstance().push(\n        Chat.SysMsg(this.turn + '의 차례입니다.')\n      );\n    }\n  }\n  public setRound(round: number) {\n    if (this.round != round) {\n      // round changed\n      this.round = round;\n      ChatContainer.getInstance().push(Chat.SysMsg('Round #' + this.round));\n    }\n  }\n  private setParticipants(users: string[]) {\n    // 게임 시작될때만, this.startGame()에서만 호출\n    UserContainer.getInstance().setParticipants(users);\n  }\n  public setWord(word: string) {\n    this.word = word;\n\n    this.wordSecret = ' ';\n    for (let i = 0; i < this.word.length; i++) {\n      this.wordSecret = this.wordSecret + '_ ';\n    }\n    // console.log(this.wordSecret);\n  }\n\n  private clearState() {\n    this.isReady = false;\n    this.isPrepare = false;\n    this.isGuess = false;\n    this.isResult = false;\n  }\n\n  public setReady() {\n    this.clearState();\n    this.isReady = true;\n    this.timerRun = false;\n    if (this.isInGame) {\n      this.isInGame = false;\n    }\n  }\n  public setPrepare() {\n    this.clearState();\n    this.isPrepare = true;\n    //TODO TimerRun이 여기 있는게 과연 맞는가?\n    this.timerRun = true;\n    if (!this.isInGame) {\n      this.isInGame = true;\n    }\n  }\n  public setGuess() {\n    this.clearState();\n    this.isGuess = true;\n    if (!this.isInGame) {\n      this.isInGame = true;\n    }\n  }\n  public setResult() {\n    this.clearState();\n    this.isResult = true;\n    if (!this.isInGame) {\n      this.isInGame = true;\n    }\n  }\n}\n","import { GameController } from '../game-controller';\nimport { Hit } from './Guess';\nimport { State } from './State';\n\nenum KEY {\n  GAME_RESULT = 'game_result',\n}\n\nexport class Ready extends State {\n  // 1. 게임이 끝났을 때\n\n  // 최종 결과\n  onMessage(msg) {\n    switch (msg.key) {\n      case KEY.GAME_RESULT:\n        console.log('게임 종료 처리');\n        //TODO ~ 게임이 끝났습니다 ~\n        let gameResult: Hit[] = msg.value;\n        this.controller.gameModel.clearGame();\n        // 최종 성적 처리~~~~\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n","import { GameController } from '../game-controller';\nimport { State } from './State';\nimport { ChatContainer, Chat } from '../../model/chat-container';\nimport { Hit } from './Guess';\nimport { COMMON_KEY } from 'src/app/interfaces';\nimport { UserContainer } from 'src/app/model/user-container';\n\nenum KEY {\n  TURN_RESULT = 'turn_result',\n  TURN_USER_LEFT = 'turn_user_left',\n  ONLY_ONE_PLAYER = 'only_one_player',\n}\n\ninterface TurnUserLeft {\n  user: string;\n}\n\nexport class Result extends State {\n  // 1. Guess에서 TimeOut됬을 때.\n  // 2. Prepare에서 해당 TurnUser가 탈주 했을 떄.\n  // 3. Guess에서 해당 TurnUser가 탈주 했을 때.\n\n  // 4. Prepare | Guess에서 2명 남은 상황에서 한명이 나갈 때.\n\n  // 해당 턴의 결과 (이 상태에서 싱크를 맞춘다.)\n  onMessage(msg) {\n    switch (msg.key) {\n      case KEY.TURN_RESULT:\n        let turnResult: Hit[] = msg.value;\n        //서버 기준으로 점수 싱크 맞추기\n        UserContainer.getInstance().syncScores(turnResult);\n        this.controller.gameModel.turnResult = turnResult\n        break;\n\n      case KEY.TURN_USER_LEFT:\n        let turnUserLeft: TurnUserLeft = {\n          user: msg.value,\n        };\n        ChatContainer.getInstance().push(\n          Chat.SysMsg(\n            '턴 유저였던 ' +\n              turnUserLeft.user +\n              '가 퇴장해서 다음턴으로 넘어갑니다.'\n          )\n        );\n        break;\n      case KEY.ONLY_ONE_PLAYER:\n        ChatContainer.getInstance().push(\n          Chat.SysMsg('플레이어가 한명밖에 남지않았으므로 게임을 종료합니다.')\n        );\n        break;\n      case COMMON_KEY.TIMER:\n        this.controller.gameModel.setTimer(msg.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { BROWSER_STORAGE } from './storage';\n// import { User } from './user';\n// import { AuthResponse } from './authresponse';\n// import { Loc8rDataService } from './loc8r-data.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  constructor(\n    @Inject(BROWSER_STORAGE) private storage: Storage\n  ) // private loc8rDataService: Loc8rDataService\n  {}\n\n  public getNoMemberName(): string {\n    return this.storage.getItem('no-member');\n  }\n\n  private createNoMember(name: string): void{\n    let id: string = Math.floor(Math.random() * 10000).toString();\n    this.saveNoMemberName(name + \"#\" + id)\n  }\n\n  public setNoMemberName(name: string): void{\n    if(this.isMemberExist()){\n      let id:string = this.getUserID()\n      this.saveNoMemberName(name + \"#\" + id)\n    }else{\n      this.createNoMember(name)\n    }\n  }\n\n  private saveNoMemberName(token: string): void {\n    this.storage.setItem('no-member', token);\n  }\n\n  \n  public isMemberExist(): boolean {\n    const noMembersNickName: string = this.getNoMemberName();\n    if (noMembersNickName) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  public getUserNickName(): string {\n    if (this.isMemberExist()) {\n      const nickName: string = this.getNoMemberName().split(\"#\")[0]\n      return nickName;\n    }\n  }\n  public getUserID(): string{\n    if (this.isMemberExist()){\n      const id: string = this.getNoMemberName().split(\"#\")[1]\n      return id;\n    }\n  }\n  public getUserFullID(): string{\n    if(this.isMemberExist()){\n      const fullid: string = this.getNoMemberName()\n      return fullid\n    }\n  }\n  // public login(user: User): Promise<any> {\n  //   return this.loc8rDataService\n  //     .login(user)\n  //     .then((authResp: AuthResponse) => this.saveToken(authResp.token));\n  // }\n\n  // public register(user: User): Promise<any> {\n  //   return this.loc8rDataService\n  //     .register(user)\n  //     .then((authResp: AuthResponse) => this.saveToken(authResp.token));\n  // }\n\n  // public logout(): void {\n  //   this.storage.removeItem('loc8r-token');\n  // }\n\n  //   public isLoggedIn(): boolean {\n  //     const token: string = this.getToken();\n  //     if (token) {\n  //       const payload = JSON.parse(atob(token.split('.')[1]));\n  //       return payload.exp > Date.now() / 1000;\n  //     } else {\n  //       return false;\n  //     }\n  //   }\n\n  //   public getCurrentUser(): User {\n  //     if (this.isLoggedIn()) {\n  //       const token: string = this.getToken();\n  //       const { email, name } = JSON.parse(atob(token.split('.')[1]));\n  //       return { email, name } as User;\n  //     }\n  //   }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserContainer } from 'src/app/model/user-container';\nimport { User } from '../interfaces';\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n})\nexport class SidebarComponent implements OnInit {\n  @Input() users: UserContainer;\n  @Input() hostUser: string;\n  @Input() mySelf: User;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div *ngIf=\"users.PUsersList.length > 0\">\n  <p class=\"list-title\">게임중</p>\n  <div id=\"ingameList\">\n    <div *ngFor=\"let user of users.PUsersList\" [ngSwitch]=\"user.name\">\n      <div class=\"user-element mySlef\"  *ngSwitchCase=\"mySelf.name\">\n        <span>{{ user.score.score }}</span>\n        {{ user.name }}\n        <span *ngIf=\"user.score.correct\">😄</span>\n        <span *ngIf=\"user.score.turn\">✏</span>\n      </div>\n      <div class=\"user-element others\" *ngSwitchDefault>\n        <span>{{ user.score.score }}</span>\n        {{ user.name }}\n        <span *ngIf=\"user.score.correct\">😄</span>\n        <span *ngIf=\"user.score.turn\">✏</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<p class=\"list-title\">대기실</p>\n<div id=\"userList\">\n  <div *ngFor=\"let user of users.NpUsersList\" [ngSwitch]=\"user.name\">\n    <div class=\"user-element mySelf\" *ngSwitchCase=\"mySelf.name\">\n      <span>{{ user.name }}</span>\n      <span *ngIf=\"user.name == hostUser\"> 🕹</span>\n    </div>\n    <div class=\"user-element others\" *ngSwitchDefault>\n      <span>{{ user.name }}</span>\n      <span *ngIf=\"user.name == hostUser\"> 🕹</span>\n    </div>\n  </div>\n</div>\n","import { User, Observer } from '../interfaces';\n\nexport class Chat {\n  private constructor(isSys: boolean, from: User, data: string) {\n    this.isSystem = isSys;\n    this.from = from;\n    this.data = data;\n  }\n  static SysMsg(msg: string): Chat {\n    return new Chat(true, null, msg);\n  }\n  static UserMsg(user: User, msg: string): Chat {\n    return new Chat(false, user, msg);\n  }\n\n  isSystem: boolean;\n  from: User;\n  data: string;\n}\nexport class ChatContainer {\n  private static instance: ChatContainer;\n  public chats: Chat[] = [];\n  \n  private constructor() {\n    \n  }\n  public init(){\n    this.chats = []\n  }\n  static getInstance() {\n    if (ChatContainer.instance) {\n      return ChatContainer.instance;\n    } else {\n      this.instance = new ChatContainer();\n      return this.instance;\n    }\n  }\n\n  push(msg: Chat) {\n    this.chats.push(msg);\n    //스크롤 최하단 고정\n    setTimeout(function(){\n      let chatViewEle = document.querySelector('.chattingView')\n      chatViewEle.scrollTop = chatViewEle.scrollHeight;\n    }, 10);\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { io, Socket } from 'socket.io-client';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router } from '@angular/router';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  //git test\n  @ViewChild('nickNameRequiredModal') nickNameRequiredModal: TemplateRef<any>;\n  nickNameRequiredModalRef: NgbModalRef;\n\n  isNameExist: boolean = false;\n\n  setNickName: string = \"\";\n\n  matchInProgress = false;\n  myName: string = 'unknown';\n  socket: Socket;\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnInit(): void {\n    // this.socket = io('ws://172.30.1.20:9999');\n    this.socket = io('ws://catchm1nd.herokuapp.com/');\n\n    this.socket.on('connect', () => {\n      console.log('connected');\n    });\n    this.socket.on('lobby-msg', (msg) => {\n      if (msg.type == 'createRoom') {\n        console.log('createRoom', msg.data);\n        this.socket.disconnect();\n        this.matchInProgress = false;\n\n        this.router.navigateByUrl(`room/${msg.data}`);\n      } else if (msg.type == 'searchRoom') {\n        console.log('searchRoom', msg.data);\n        this.socket.disconnect();\n        this.matchInProgress = false;\n        this.router.navigateByUrl(`room/${msg.data}`);\n      }\n    });\n    this.isNameExist = this.authService.isMemberExist()\n    \n    this.myName = this.authService.getUserFullID();\n    \n  }\n\n  openModal(content) {\n    this.nickNameRequiredModalRef = this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      backdrop: 'static',\n      animation: true,\n    });\n  }\n  closeModal() {\n    if(this.setNickName != \"\" && this.setNickName.length < 7){\n      this.authService.setNoMemberName(this.setNickName);\n      this.myName = this.authService.getUserFullID();\n      this.isNameExist = this.authService.isMemberExist()\n      this.nickNameRequiredModalRef.close();\n    }else{\n      alert(\"닉네임은 6자 이하로 입력해 주세요.\")\n    }\n  }\n  makeRoom() {\n    if (this.socket.connected) {\n      if (this.authService.isMemberExist()) {\n        this.matchInProgress = true;\n        let createReqMsg = {\n          type: 'createRoom',\n          data: this.authService.getUserFullID(),\n        };\n        this.socket.emit('lobby-msg', createReqMsg);\n      } else {\n        this.openModal(this.nickNameRequiredModal);\n      }\n    }\n  }\n\n  searchRoom() {\n    if (this.socket.connected) {\n      if(this.authService.isMemberExist()){\n        this.matchInProgress = true;\n        let searchReqMsg = {\n          type: 'searchRoom',\n          data: this.authService.getUserFullID(),\n        };\n        this.socket.emit('lobby-msg', searchReqMsg);\n      }else{\n        this.openModal(this.nickNameRequiredModal);\n      }\n    }\n  }\n}\n","<div class=\"row\" style=\"margin-top: 10px;\">\n  <h3 *ngIf=\"isNameExist\" class=\"col-8 col-md-10  col-lg-11\">안녕하세요 <br>{{ myName }} 님!</h3>\n\n  <h3 *ngIf=\"!isNameExist\" class=\"col-8 col-md-10 col-lg-11\">\n    닉네임을 먼저 설정해 주세요\n  </h3>\n  <button\n    class=\"btn btn-primary btn col-4 col-md-2 col-lg-1\"\n    (click)=\"openModal(nickNameRequiredModal)\"\n  >\n    닉네임 설정\n  </button>\n</div>\n\n<div class=\"row justify-content-around\" style=\"margin-top: 40px;\">\n  <button\n    class=\"col-6 col-md-4 btn btn-outline-primary btn-lg\"\n    (click)=\"makeRoom()\"\n    [disabled]=\"matchInProgress\"\n  >\n    <span\n      *ngIf=\"matchInProgress\"\n      class=\"spinner-border spinner-border-lg\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    ></span>\n\n    방 만들기\n  </button>\n\n  <button\n    class=\"col-6 col-md-4 btn btn-outline-primary btn-lg\"\n    (click)=\"searchRoom()\"\n    [disabled]=\"matchInProgress\"\n  >\n    <span\n      *ngIf=\"matchInProgress\"\n      class=\"spinner-border spinner-border-lg\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    ></span>\n    게임 찾기\n  </button>\n</div>\n\n<div class=\"row\" style=\"margin-top: 40px; margin-bottom: 40px;\">\n  <h4>공지사항</h4>\n  <ul>\n    <li>\n      테스트 버전이라서 아직 불안정한 부분이 많습니다😅 버그 리포트는 에타\n      댓글이나 쪽지 이용해주세요\n    </li>\n    <li>\n      채팅창에서 /add 원하는단어 입력하면 단어가 일시적으로 추가됩니다. (영구적으로 추가되진 않지만 많이 추가된 단어 순으로 업데이트 할 예정입니다.)\n    </li>\n    <li>\n      \"방 검색 허용\"을 체크 해제하면 로비에서 게임 찾기를 할때 검색되지 않습니다. (링크로는 접속가능합니다.)\n    </li>\n  </ul>\n</div>\n\n<ng-template #nickNameRequiredModal let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\" id=\"exampleModalLabel\">닉네임을 설정해 주세요!</h5>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"nick-name\" class=\"col-form-label\">닉네임 :</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"nick-name\"\n          [(ngModel)]=\"setNickName\"\n          name=\"first\"\n        />\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeModal()\">\n      설정\n    </button>\n  </div>\n</ng-template>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum StateType {\n  ready = 'ready',\n  prepare = 'prepare',\n  guess = 'guess',\n  result = 'result',\n}\n\nexport interface Observer {\n  update<T>(updatedData: T): void;\n}\n\nexport interface Observable {\n  subscribe(o: Observer): void;\n  unsubscribe(o: Observer): void;\n  notify(): void;\n}\n\nexport enum COMMON_KEY {\n  TIMER = 'timer',\n}\n\nexport interface JoinData {\n  roomID: string;\n  user: User;\n}\n\ninterface inflatable {\n  inflate(like: any): void;\n}\n\nexport class User implements inflatable {\n  constructor(name: string) {\n    this.name = name;\n    this.isParticipant = false;\n  }\n  public getName(): string {\n    return this.name;\n  }\n  inflate(userLike: any): User {\n    this.name = userLike.name;\n    this.isParticipant = userLike.isParticipant;\n    if (userLike.score) {\n      this.score = new Score().inflate(userLike.score);\n    }\n    return this;\n  }\n  name: string;\n  isParticipant: boolean;\n  score: Score = null;\n}\n\nexport class Score implements inflatable {\n  constructor() {\n    this.turnScore = 0\n    this.score = 0;\n    this.correct = false;\n    this.turn = false;\n  }\n  inflate(scoreLike: any): Score {\n    this.score = scoreLike.score;\n    this.correct = scoreLike.correct;\n    this.turn = scoreLike.turn;\n    //TODO turnScore는?\n    return this;\n  }\n  matched(score: number) {\n    this.correct = true;\n    this.score += score;\n    this.turnScore = score;\n  }\n  turnClear() {\n    this.turnScore = 0;\n    this.correct = false;\n  }\n  turnScore: number;\n  score: number;\n  correct: boolean;\n  turn: boolean;\n}\n","import { convertToParamMap } from '@angular/router';\n\nexport class Draw {\n  NormX: number;\n  NormY: number;\n}\nexport enum ModeType {\n  PEN = 'pen',\n  ERASE = 'erase',\n}\nabstract class DrawMode {\n  public readonly Type: ModeType;\n  protected controller: CanvasController;\n  protected ctx;\n  constructor(controller: CanvasController) {\n    this.controller = controller;\n    this.ctx = controller.getCtx();\n  }\n  abstract draw(x: number, y: number): void;\n}\n\nclass Pen extends DrawMode {\n  Type = ModeType.PEN;\n  draw(x: number, y: number): void {\n    this.ctx.beginPath();\n    this.ctx.lineWidth = this.controller.getStrokeWidth();\n    this.ctx.strokeStyle = this.controller.getStrokeColor();\n    this.ctx.lineCap = 'round';\n    if (this.controller.getPrevX() > -1 && this.controller.getPrevY() > -1) {\n      this.ctx.moveTo(this.controller.getPrevX(), this.controller.getPrevY());\n    } else {\n      this.ctx.moveTo(x, y);\n    }\n    this.ctx.lineTo(x, y);\n    this.ctx.stroke();\n\n    this.controller.setPrevPos(x, y);\n  }\n}\n\nclass Erase extends DrawMode {\n  Type = ModeType.ERASE;\n  draw(x: number, y: number): void {\n    this.ctx.beginPath();\n    this.ctx.lineWidth = this.controller.getStrokeWidth();\n    this.ctx.strokeStyle = 'white';\n    this.ctx.lineCap = 'round';\n    if (this.controller.getPrevX() > -1 && this.controller.getPrevY() > -1) {\n      this.ctx.moveTo(this.controller.getPrevX(), this.controller.getPrevY());\n    } else {\n      this.ctx.moveTo(x, y);\n    }\n    this.ctx.lineTo(x, y);\n    this.ctx.stroke();\n\n    this.controller.setPrevPos(x, y);\n  }\n}\nexport class CanvasController {\n  private static instance: CanvasController;\n  private ctx: CanvasRenderingContext2D;\n  private canvas: HTMLCanvasElement;\n  private prevX: Number = -1;\n  private prevY: Number = -1;\n  private strokeWidth: Number = 1;\n  private strokeColor: string = 'black';\n  \n  private prevWidth: number;\n  private resizeTimeout;\n  private restoreWidthRatio: number = 1;\n\n  private devicePixelRatio: number = 1;\n\n  public mode: DrawMode;\n  public pen: DrawMode;\n  public erase: DrawMode;\n\n  private constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.init();\n    window.addEventListener('resize', this.resizeThrottler.bind(this), false);\n\n    this.pen = new Pen(this);\n    this.erase = new Erase(this);\n    this.mode = this.pen;\n  }\n  public initDrawingOptions() {\n    this.setStrokeColor('black');\n    this.setStrokeWidth(3);\n    this.setDrawMode(ModeType.PEN);\n  }\n  public getStrokeWidth() {\n    return this.strokeWidth;\n  }\n  public getStrokeColor() {\n    return this.strokeColor;\n  }\n  public setStrokeWidth(width: number) {\n    this.strokeWidth = width * this.devicePixelRatio;\n  }\n  public setStrokeColor(color: string) {\n    this.strokeColor = color;\n  }\n  public msgHandler(msg) {\n    // Turn 유저로부터 브로드 캐스팅 된 Draw Msg 를 기반으로 캔버스를 재현함\n    if (msg.type == 'draw') {\n      console.log(msg.data)\n      this.draw(msg.data.NormX, msg.data.NormY);\n    } else if (msg.type == 'pen_up') {\n      this.penUp();\n    } else if (msg.type == 'mode change') {\n      this.setDrawMode(msg.data);\n    } else if (msg.type == 'width change') {\n      this.setStrokeWidth(msg.data);\n    } else if (msg.type == 'color change') {\n      this.setStrokeColor(msg.data);\n    } else if (msg.type == 'canvas clear') {\n      this.clear();\n    }\n  }\n  public setDrawMode(mode: ModeType) {\n    switch (mode) {\n      case ModeType.PEN:\n        this.mode = this.pen;\n        break;\n      case ModeType.ERASE:\n        this.mode = this.erase;\n        break;\n\n      default:\n        break;\n    }\n  }\n  public getPrevX() {\n    return this.prevX;\n  }\n  public getPrevY() {\n    return this.prevY;\n  }\n  public getCtx() {\n    return this.ctx;\n  }\n  public setPrevPos(X: Number, Y: Number) {\n    this.prevX = X;\n    this.prevY = Y;\n  }\n  static createInstance(ctx: any) {\n    this.instance = new CanvasController(ctx);\n  }\n  static getInstance() {\n    if (CanvasController.instance) {\n      return CanvasController.instance;\n    } else {\n      console.log('CanvasController not found');\n      return null;\n    }\n  }\n\n  draw(normalizedX: number, normalizedY: number): void {\n    this.mode.draw(\n      normalizedX * this.canvas.width,\n      normalizedY * this.canvas.height\n    );\n  }\n  penUp() {\n    this.prevY = -1;\n    this.prevX = -1;\n  }\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.prevY = -1;\n    this.prevX = -1;\n  }\n\n  public setCanvasSize() {\n    const RATIO_16_10 = 0.625;\n    const {\n      width: hidefCanvasWidth,\n      height: hidefCanvasHeight,\n    } = this.canvas.getBoundingClientRect();\n    const hidefCanvasCssWidth = hidefCanvasWidth;\n    const hidefCanvasCssHeight = hidefCanvasWidth * RATIO_16_10;\n    // const hidefCanvasCssHeight = hidefCanvasHeight;\n    this.canvas.setAttribute(\n      'width',\n      `${hidefCanvasWidth * this.devicePixelRatio}`\n    );\n    this.canvas.setAttribute(\n      'height',\n      `${hidefCanvasWidth * this.devicePixelRatio * RATIO_16_10}`\n      // `${hidefCanvasHeight * this.devicePixelRatio * 0.625}`\n    );\n    this.canvas.style.width = `${hidefCanvasCssWidth}px`;\n    this.canvas.style.height = `${hidefCanvasCssHeight}px`;\n  }\n\n  private init() {\n    if (window.devicePixelRatio) {\n      this.devicePixelRatio = window.devicePixelRatio;\n    }\n    this.setCanvasSize();\n    this.prevWidth = this.canvas.width;\n  }\n\n  public resizeThrottler() {\n    if (!this.resizeTimeout) {\n      this.resizeTimeout = setTimeout(\n        function () {\n          this.resizeTimeout = null;\n          this.actualResizeHandler();\n        }.bind(this),\n        66\n      );\n    }\n  }\n\n  public actualResizeHandler() {\n    //리사이즈 될 때 기존 캔버스 그림 저장후 변화된 스케일에 맞춰 복구함\n    this.canvas.style.width = '100%';\n\n    let saved: CanvasImageSource = new Image();\n    saved.src = this.canvas.toDataURL();\n\n    this.setCanvasSize();\n\n    if (this.prevWidth != this.canvas.width) {\n      //실제 캔버스의 width가 변할때만 복구\n      this.restoreWidthRatio = this.canvas.width / this.prevWidth;\n      this.prevWidth = this.canvas.width;\n    }\n\n    saved.onload = function () {\n      //모두지우고\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      //기존의 그림을 바뀐 브라우저 사이즈의 스케일로 그려줌\n      this.ctx.scale(this.restoreWidthRatio, this.restoreWidthRatio);\n      this.restoreWidthRatio = 1;\n      this.ctx.drawImage(saved, 0, 0);\n      //스케일 다시 1로 복구\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }.bind(this);\n  }\n}\n","import { UserContainer } from 'src/app/model/user-container';\nimport { ChatContainer, Chat } from 'src/app/model/chat-container';\nimport { GameController } from '../game-controller';\nimport { State } from './State';\nimport { COMMON_KEY } from 'src/app/interfaces';\n\nenum KEY {\n  COMMITTED_WORD = 'committed_word',\n  USER_HIT = 'user_hit',\n}\n\n// 확정된 단어\nexport interface CommittedWord {\n  word: string;\n}\n\n// ~가 맞췄습니다 (id, 점수)\nexport interface Hit {\n  user: string;\n  score: number;\n}\n\nexport class Guess extends State {\n  // 1. Prepare에서 TimeOut될 때\n  // 2. Turn User가 단어를 선택했을 때.\n\n  onMessage(msg) {\n    switch (msg.key) {\n      case KEY.COMMITTED_WORD:\n        let committedWord: CommittedWord = {\n          word: msg.value,\n        };\n        this.controller.gameModel.setWord(committedWord.word);\n        break;\n\n      case KEY.USER_HIT:\n        let hit: Hit = msg.value;\n        UserContainer.getInstance().setCorrect(hit.user, hit.score);\n        ChatContainer.getInstance().push(\n          Chat.SysMsg(hit.user + '가 맞췄습니다.')\n        );\n        break;\n\n      case COMMON_KEY.TIMER:\n        this.controller.gameModel.setTimer(msg.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n","import { useAnimation } from '@angular/animations';\nimport { Hit } from '../controller/state/Guess';\nimport { Observer, Score, User } from '../interfaces';\n\nexport class UserContainer {\n  public NpUsersList: Array<User>;\n  public PUsersList: Array<User>;\n\n  private NpUsers: Map<string, User>;\n  private PUsers: Map<string, User>;\n\n  private constructor() {\n    this.init();\n  }\n\n  public init() {\n    this.NpUsersList = new Array<User>();\n    this.PUsersList = new Array<User>();\n    this.NpUsers = new Map();\n    this.PUsers = new Map();\n  }\n  private static instance: UserContainer;\n\n  static getInstance(): UserContainer {\n    if (!UserContainer.instance) {\n      this.instance = new UserContainer();\n    }\n    return this.instance;\n  }\n\n  changeTurn(username: string) {\n    //TODO 이게 정말 필요한지?\n    this.PUsers.forEach((user) => {\n      user.score.turn = user.getName() == username;\n      //턴 유저만 true 할당\n    });\n  }\n\n  // 새롭게 방에 참가할때 받는 유저정보\n  restoreUsers(users: User[]): void {\n    for (let user of users) {\n      if (user.isParticipant) {\n        this.PUsers.set(user.name, new User(user.name).inflate(user));\n      } else {\n        this.NpUsers.set(user.name, new User(user.name).inflate(user));\n      }\n    }\n    this.updateList();\n\n    console.log('restore ', 'setUsers : ', this.NpUsers);\n  }\n\n  //새로운 유저가 들어올 때\n  add(user: User): void {\n    this.NpUsers.set(user.getName(), new User(user.name));\n    this.updateList();\n  }\n\n  sortParticipants(): void {}\n  setCorrect(username: string, score: number): void {\n    // 맞췄을때\n    this.PUsers.forEach((user) => {\n      if (user.getName() === username && !user.score.correct) {\n        user.score.matched(score);\n        console.log('score : ', user.score.score);\n      }\n    });\n  }\n  resetCorrect(): void {\n    // 턴이 변경될때\n    for (let user of this.getParticipants()) {\n      user.score.turnClear();\n    }\n  }\n\n  updateList() {\n    this.PUsersList = new Array<User>();\n    this.NpUsersList = new Array<User>();\n\n    this.PUsers.forEach((user) => {\n      this.PUsersList.push(user);\n    });\n    this.NpUsers.forEach((user) => {\n      this.NpUsersList.push(user);\n    });\n  }\n\n  resetParticipants(): void {\n    //게임 끝나고 리셋\n    for (let userName of this.PUsers.keys()) {\n      let user = this.PUsers.get(userName);\n      user.isParticipant = false;\n      user.score = null;\n\n      this.NpUsers.set(userName, user);\n      this.PUsers.delete(userName);\n    }\n    this.updateList();\n  }\n  setParticipants(participants: string[]): void {\n    // 1. 게임 시작될 때 GameModel.startGame()에서 호출\n    // 2. 게임 진행중인 방에 새로 유저가 들어왔을때 romm component에서 호출\n\n    for (let userName of participants) {\n      let target: User = this.NpUsers.get(userName);\n      target.isParticipant = true;\n      target.score = new Score();\n\n      this.PUsers.set(userName, target);\n      this.NpUsers.delete(userName);\n    }\n\n    this.updateList();\n  }\n\n  leaveUser(username: string): void {\n    //유저 나갈때\n\n    //NpUsers에서 검색\n    for (let userName of this.NpUsers.keys()) {\n      let user = this.NpUsers.get(userName);\n      if (user && user.getName() === username) {\n        this.NpUsers.delete(username);\n      }\n    }\n\n    //PUsers에서 검색\n    for (let userName of this.PUsers.keys()) {\n      let user = this.PUsers.get(userName);\n      if (user && user.getName() === username) {\n        this.PUsers.delete(username);\n      }\n    }\n\n    this.updateList();\n  }\n\n  syncScores(hits: Hit[]){\n    hits.forEach(hit => {\n      let target = this.PUsers.get(hit.user);\n      if(target.score.score != hit.score){\n        console.log(\"점수 싱크가 맞지 않습니다.\")\n        target.score.score = hit.score\n      }\n    })\n  }\n\n  getParticipants(): User[] {\n    return this.PUsersList;\n  }\n\n  getNotParticipants(): User[] {\n    return this.NpUsersList;\n  }\n}\n","import { CanvasController } from 'src/app/draw';\nimport { COMMON_KEY } from 'src/app/interfaces';\nimport { Chat, ChatContainer } from 'src/app/model/chat-container';\nimport { GameController } from '../game-controller';\nimport { State } from './State';\n\nenum KEY {\n  START = 'start',\n  NEW_TURN = 'new_turn',\n}\n\n// 참여자 정보(처음 시작시에만)\ninterface StartData {\n  participants: string[];\n}\n\n// 단어 3개, 턴 유저, 라운드\ninterface PrepareData {\n  words: string[];\n  turn: string;\n  round: number;\n}\n\nexport class Prepare extends State {\n  // 1. Host가 게임을 시작시켰을 때.\n  // 2. 새로운 Turn, Round가 시작될 때\n\n  onMessage(msg) {\n    switch (msg.key) {\n      case KEY.START:\n        //TODO 한 게임당 최초 한번만 호출됨을 보장할 것\n        let startData: StartData = {\n          participants: msg.value,\n        };\n        this.controller.gameModel.startGame(startData.participants);\n\n        break;\n\n      case KEY.NEW_TURN:\n        let newTurnData: PrepareData = msg.value;\n        this.controller.gameModel.setRound(newTurnData.round);\n        this.controller.gameModel.setTurn(newTurnData.turn);\n        this.controller.gameModel.setWords(newTurnData.words);\n        CanvasController.getInstance().initDrawingOptions()\n        break;\n\n      case COMMON_KEY.TIMER:\n        this.controller.gameModel.setTimer(msg.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'catchmind';\n}\n","<!-- As a link -->\n<nav class=\"navbar navbar-dark bg-dark\">\n  <div class=\"container\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">Catch M!nd</a>\n    </div>\n  </div>\n</nav>\n<div class=\"container\" style=\"background-color: snow;\">\n  <div style=\"margin-left: 10px; margin-right: 10px; padding-top: 10px;\">\n    <router-outlet></router-outlet>\n    <footer>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <small>Test Ver 1.0</small>\n        </div>\n      </div>\n    </footer>\n  </div>\n  \n</div>\n","import { InjectionToken } from '@angular/core';\n\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\n  providedIn: 'root',\n  factory: () => localStorage,\n});\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n// import { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RoomComponent } from './room/room.component';\nimport { HomeComponent } from './home/home.component';\nimport { CanvasComponent } from './canvas/canvas.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ChatComponent } from './chat/chat.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// const config: SocketIoConfig = { url: 'http://localhost:9999', options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoomComponent,\n    HomeComponent,\n    CanvasComponent,\n    SidebarComponent,\n    ChatComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      {\n        path: '',\n        component: HomeComponent,\n      },\n      {\n        path: 'room/:roomID',\n        component: RoomComponent,\n      },\n    ]),\n    NgbModule,\n    // SocketIoModule.forRoot(config),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { isThisTypeNode } from 'typescript';\nimport { ModeType, Draw, CanvasController } from '../draw';\nimport { GameModel } from '../model/game-model';\n\nimport { HostBinding } from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  // ...\n} from '@angular/animations';\n\nabstract class Handler {\n  component: CanvasComponent;\n  constructor(component: CanvasComponent) {\n    this.component = component;\n  }\n  abstract handle(e: any): Draw;\n  isTimeToHandle() {\n    return (\n      this.component.mousedown &&\n      this.component.gameModel.myTurn &&\n      this.component.gameModel.isGuess\n    );\n  }\n}\nclass MouseHandler extends Handler {\n  handle(e): Draw {\n    var drawData: Draw = { NormX: 0, NormY: 0 };\n\n    var viewportOffset = this.component.canvas.getBoundingClientRect();\n    //(this.component.canvas.width / window.devicePixelRatio)\n    drawData = {\n      NormX: e.offsetX / viewportOffset.width,\n      NormY: e.offsetY / viewportOffset.height,\n    };\n\n    return drawData;\n  }\n}\nclass TouchHandler extends Handler {\n  handle(e): Draw {\n    var drawData: Draw = { NormX: 0, NormY: 0 };\n\n    var viewportOffset = this.component.canvas.getBoundingClientRect();\n    drawData = {\n      NormX:\n        (e.touches[0].clientX - viewportOffset.left) / viewportOffset.width,\n      NormY:\n        (e.touches[0].clientY - viewportOffset.top) / viewportOffset.height,\n    };\n\n    return drawData;\n  }\n}\n\nclass DefaultHandler extends Handler {\n  handle(e): Draw {\n    if (e instanceof MouseEvent) {\n      this.component.setHandler(this.component.mouseHandler);\n    } else if (e instanceof TouchEvent) {\n      this.component.setHandler(this.component.touchHandler);\n    }\n    return this.component.handler.handle(e);\n  }\n}\n\n@Component({\n  selector: 'app-canvas',\n  templateUrl: './canvas.component.html',\n  styleUrls: ['./canvas.component.css'],\n  animations: [\n    trigger('overlayTrigger', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('700ms', style({ opacity: 1 })),\n      ]),\n      transition(':leave', [animate('700ms', style({ opacity: 0 }))]),\n    ]),\n  ],\n})\nexport class CanvasComponent implements OnInit {\n  @Input() gameModel: GameModel;\n  @Input() socket: any;\n  public inputElement: HTMLInputElement;\n  public mousedown: boolean = false;\n  public guess: String; // 보낼 정답\n  public canvas: HTMLCanvasElement;\n  public strokeWidth: number;\n\n  defaultHandler: Handler;\n  touchHandler: Handler;\n  mouseHandler: Handler;\n  handler: Handler;\n  setHandler(handler: Handler) {\n    this.handler = handler;\n  }\n  checkGuess(): void {\n    if (this.guess !== '') {\n      this.socket.emit('game-msg', this.guess);\n      this.inputElement = <HTMLInputElement>(\n        document.getElementById('guess-input')\n      );\n      this.inputElement.value = '';\n      this.guess = '';\n    } else {\n      alert('단어를 입력해 주세요.');\n    }\n  }\n  constructor() {\n    this.defaultHandler = new DefaultHandler(this);\n    this.touchHandler = new TouchHandler(this);\n    this.mouseHandler = new MouseHandler(this);\n\n    this.handler = this.defaultHandler;\n  }\n\n  clearCanvas(): void {\n    CanvasController.getInstance().clear();\n    let msg = {\n      type: 'canvas clear',\n      data: null,\n    };\n    this.socket.emit('draw cmd', msg);\n  }\n  selectPen(): void {\n    console.log('selectPen');\n    this.selectMode(ModeType.PEN);\n  }\n  selectErase(): void {\n    console.log('selectErase');\n    this.selectMode(ModeType.ERASE);\n  }\n  private selectMode(mode: ModeType) {\n    CanvasController.getInstance().setDrawMode(mode);\n    let msg = {\n      type: 'mode change',\n      data: mode,\n    };\n    this.socket.emit('draw cmd', msg);\n  }\n\n  selectStrokeSize(width: string) {\n    CanvasController.getInstance().setStrokeWidth(parseInt(width));\n    let msg = {\n      type: 'width change',\n      data: width,\n    };\n    this.socket.emit('draw cmd', msg);\n  }\n\n  selectColor(color: string) {\n    CanvasController.getInstance().setStrokeColor(color);\n    let msg = {\n      type: 'color change',\n      data: color,\n    };\n    this.socket.emit('draw cmd', msg);\n  }\n\n  penUp() {\n    if (this.mousedown && this.gameModel.myTurn && this.gameModel.isGuess) {\n      this.socket.emit('draw cmd', { type: 'pen_up' });\n    }\n  }\n\n  handleMouseEnter(e: any): void {\n    if (this.handler.isTimeToHandle()) {\n      let drawData: Draw = this.handler.handle(e);\n\n      CanvasController.getInstance().draw(drawData.NormX, drawData.NormY);\n\n      let msg = {\n        type: 'draw',\n        data: drawData,\n      };\n      this.socket.emit('draw cmd', msg);\n    }\n  }\n\n  ngOnInit(): void {\n    this.canvas = document.getElementById('canvas') as HTMLCanvasElement;\n\n    CanvasController.createInstance(this.canvas);\n\n    this.canvas.addEventListener(\n      'mousemove',\n      function (e) {\n        this.handleMouseEnter(e);\n      }.bind(this),\n      false\n    );\n    this.canvas.addEventListener(\n      'mousedown',\n      function (e) {\n        this.mousedown = true;\n      }.bind(this),\n      false\n    );\n    this.canvas.addEventListener(\n      'mouseup',\n      function (e) {\n        this.penUp();\n        this.mousedown = false;\n        CanvasController.getInstance().penUp();\n      }.bind(this),\n      false\n    );\n    this.canvas.addEventListener(\n      'touchstart',\n      function (e) {\n        e.preventDefault();\n        console.log(e);\n        this.mousedown = true;\n      }.bind(this),\n      false\n    );\n    this.canvas.addEventListener(\n      'touchmove',\n      function (e) {\n        e.preventDefault();\n        this.handleMouseEnter(e);\n      }.bind(this),\n      false\n    );\n    this.canvas.addEventListener(\n      'touchend',\n      function (e) {\n        e.preventDefault();\n        this.penUp();\n        this.mousedown = false;\n        if (this) CanvasController.getInstance().penUp();\n      }.bind(this),\n      false\n    );\n  }\n}\n","<div id=\"canvas-wrapper\">\n  <canvas id=\"canvas\" style=\"width: 100%; border: 1px solid lightgray\"></canvas>\n\n  <div *ngIf=\"gameModel.isResult\" @overlayTrigger class=\"overlay\">\n    <div class=\"text\">\n      <h2>제시어는 {{ gameModel.word }} 이었습니다!</h2>\n      <hr />\n      <div *ngFor=\"let hit of gameModel.turnResult\">\n        <h3>{{ hit.user }} : +{{ hit.score }}</h3>\n      </div>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"gameModel.myTurn && gameModel.isPrepare\"\n    @overlayTrigger\n    class=\"overlay\"\n  >\n    <div class=\"text\">\n      <h2>세가지 제시어중 하나를 선택해주세요!</h2>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"!gameModel.myTurn && gameModel.isPrepare\"\n    @overlayTrigger\n    class=\"overlay\"\n  >\n    <div class=\"text\">\n      <h2>{{ gameModel.turn }}의 차례입니다.</h2>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"gameModel.myTurn\">\n  <div\n    class=\"btn-group\"\n    role=\"group\"\n    aria-label=\"Basic radio toggle button group\"\n  >\n    <input\n      type=\"radio\"\n      class=\"btn-check\"\n      name=\"btnradio\"\n      id=\"btnradio1\"\n      autocomplete=\"off\"\n      (click)=\"selectPen()\"\n      checked\n    />\n    <label class=\"btn btn-outline-primary\" for=\"btnradio1\">펜</label>\n\n    <input\n      type=\"radio\"\n      class=\"btn-check\"\n      name=\"btnradio\"\n      id=\"btnradio2\"\n      autocomplete=\"off\"\n      (click)=\"selectErase()\"\n    />\n    <label class=\"btn btn-outline-primary\" for=\"btnradio2\">지우개</label>\n  </div>\n\n  <div\n    class=\"btn-group\"\n    role=\"group\"\n    aria-label=\"Basic radio toggle button group\"\n  >\n    <input\n      type=\"radio\"\n      class=\"btn-check\"\n      name=\"stroke\"\n      id=\"stroke1\"\n      autocomplete=\"off\"\n      (click)=\"selectStrokeSize('3')\"\n      checked\n    />\n    <label class=\"btn btn-outline-primary\" for=\"stroke1\">얇게</label>\n\n    <input\n      type=\"radio\"\n      class=\"btn-check\"\n      name=\"stroke\"\n      id=\"stroke2\"\n      autocomplete=\"off\"\n      (click)=\"selectStrokeSize('5')\"\n    />\n    <label class=\"btn btn-outline-primary\" for=\"stroke2\">보통</label>\n    <input\n      type=\"radio\"\n      class=\"btn-check\"\n      name=\"stroke\"\n      id=\"stroke3\"\n      autocomplete=\"off\"\n      (click)=\"selectStrokeSize('7')\"\n    />\n    <label class=\"btn btn-outline-primary\" for=\"stroke3\">굵게</label>\n  </div>\n\n  <div\n    class=\"btn-group\"\n    role=\"group\"\n    aria-label=\"Basic radio toggle button group\"\n  >\n    <input\n      type=\"radio\"\n      class=\"btn-check\"\n      name=\"color\"\n      id=\"color1\"\n      autocomplete=\"off\"\n      (click)=\"selectColor('black')\"\n      checked\n    />\n    <label class=\"btn btn-outline-primary\" for=\"color1\">Black</label>\n\n    <input\n      type=\"radio\"\n      class=\"btn-check\"\n      name=\"color\"\n      id=\"color2\"\n      autocomplete=\"off\"\n      (click)=\"selectColor('red')\"\n    />\n    <label class=\"btn btn-outline-primary\" for=\"color2\">Red</label>\n    <input\n      type=\"radio\"\n      class=\"btn-check\"\n      name=\"color\"\n      id=\"color3\"\n      autocomplete=\"off\"\n      (click)=\"selectColor('green')\"\n    />\n    <label class=\"btn btn-outline-primary\" for=\"color3\">Green</label>\n\n    <input\n      type=\"radio\"\n      class=\"btn-check\"\n      name=\"color\"\n      id=\"color4\"\n      autocomplete=\"off\"\n      (click)=\"selectColor('blue')\"\n    />\n    <label class=\"btn btn-outline-primary\" for=\"color4\">Blue</label>\n  </div>\n  <button class=\"btn btn-primary\" (click)=\"clearCanvas()\">모두 지우기</button>\n</div>\n\n<div class=\"input-group\" *ngIf=\"!gameModel.myTurn\">\n  <input\n    [(ngModel)]=\"guess\"\n    type=\"text\"\n    class=\"form-control\"\n    placeholder=\"Endter Guess!\"\n    aria-describedby=\"basic-addon2\"\n    id=\"guess-input\"\n    (keydown.enter)=\"checkGuess()\"\n  />\n  <div class=\"input-group-append\">\n    <button\n      (click)=\"checkGuess()\"\n      class=\"btn btn-outline-primary\"\n      type=\"button\"\n    >\n      Guess\n    </button>\n  </div>\n</div>\n","import { StateType, User } from '../interfaces';\nimport { GameModel } from '../model/game-model';\nimport { State } from './state/State';\nimport { Ready } from './state/Ready';\nimport { Prepare } from './state/Prepare';\nimport { Guess } from './state/Guess';\nimport { Result } from './state/Result';\n\nconst log = (msg) => {\n  console.log('game-controller', msg);\n};\nexport class GameController {\n  // Singleton Instance\n  private static instance: GameController;\n\n  // Model\n  public gameModel: GameModel;\n\n  // State\n  private ready: Ready;\n  private prepare: Prepare;\n  private guess: Guess;\n  private result: Result;\n  private state: State;\n\n  private constructor(mySelf: User) {\n    this.gameModel = new GameModel(mySelf);\n    this.ready = new Ready(this);\n    this.prepare = new Prepare(this);\n    this.guess = new Guess(this);\n    this.result = new Result(this);\n    //최초 State는 Ready\n    this.state = this.ready;\n  }\n  public init(){\n    this.state = this.ready;\n  }\n  public getModel(): GameModel {\n    return this.gameModel;\n  }\n  public static createInstance(mySelf: User): GameController {\n    if (!this.instance) {\n      this.instance = new GameController(mySelf);\n    }\n    return this.instance;\n  }\n  public static getInstance(): GameController {\n    if (GameController.instance) {\n      return GameController.instance;\n    } else {\n      console.log('game instance not found');\n      return null;\n    }\n  }\n\n  public transition(dest: StateType) {\n    log('Transition : ' + dest);\n    if (dest == StateType.ready) {\n      this.gameModel.setReady();\n      this.state = this.ready;\n    } else if (dest == StateType.prepare) {\n      this.gameModel.setPrepare();\n      this.state = this.prepare;\n    } else if (dest == StateType.guess) {\n      this.gameModel.setGuess();\n      this.state = this.guess;\n    } else if (dest == StateType.result) {\n      this.gameModel.setResult();\n      this.state = this.result;\n    } else {\n      log('잘못된 StateType 입니다.');\n    }\n  }\n\n  public msgHandler(msg) {\n    this.state.onMessage(msg);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Draw, CanvasController } from '../draw';\nimport { PhaseType } from '../message';\nimport { io } from 'socket.io-client';\nimport { GameController } from '../controller/game-controller';\nimport { UserContainer } from '../model/user-container';\nimport { Chat, ChatContainer } from '../model/chat-container';\nimport { JoinData, User } from '../interfaces';\nimport { GameModel } from '../model/game-model';\nimport { AuthenticationService } from '../authentication.service';\nimport {\n  NgbModal,\n  ModalDismissReasons,\n  NgbModalRef,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { Socket } from 'socket.io-client';\n@Component({\n  selector: '',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.css'],\n})\nexport class RoomComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('nickNameRequiredModal') nickNameRequiredModal: TemplateRef<any>;\n  @Input() nickName: string;\n\n  nickNameRequiredModalRef: NgbModalRef;\n  setNickName: string = \"\";\n\n  mySelf: User;\n  myID: string;\n  myName: string = 'unknown';\n\n  hostUser: string;\n  isHost: boolean = false;\n\n  users: UserContainer;\n  chatList: ChatContainer;\n\n  socket: Socket;\n  // private mySelf: User;\n  ROOM_ID: string = '7777';\n\n  public setTimeout: number;\n  public setRound: number;\n\n  private gameController: GameController;\n  public gameModel: GameModel;\n  private canvasController: CanvasController;\n\n  public checkboxGroupForm: FormGroup;\n\n  setMySelf(user: User) {\n    this.mySelf = user;\n    this.myName = this.mySelf.getName();\n    this.connect();\n  }\n  ngAfterViewInit() {\n    if (this.authService.isMemberExist()) {\n      this.setMySelf(new User(this.authService.getUserFullID()));\n    } else {\n      this.openModal(this.nickNameRequiredModal);\n    }\n  }\n  ngOnDestroy() {\n    if (this.socket.connected) {\n      this.socket.disconnect();\n    }\n  }\n\n  join() {\n    // Room에 접속시도\n    if (this.gameModel.mySelf.getName() !== 'unknown-user') {\n      let joinData: JoinData = {\n        roomID: this.ROOM_ID,\n        user: this.gameModel.mySelf,\n      };\n      this.socket.emit('join', joinData);\n    } else {\n      alert('유저 이름을 설정해주세요.');\n    }\n  }\n  openModal(content) {\n    this.nickNameRequiredModalRef = this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n      backdrop: 'static',\n      animation: true,\n    });\n  }\n  public closeModal() {\n    if (this.setNickName != '' && this.setNickName.length < 7) {\n      this.authService.setNoMemberName(this.setNickName);\n      this.setMySelf(new User(this.authService.getUserFullID()));\n      this.nickNameRequiredModalRef.close();\n    } else {\n      alert('닉네임은 6자 이하로 입력해 주세요.');\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthenticationService,\n    private modalService: NgbModal,\n    private formBuilder: FormBuilder\n  ) {\n    this.ROOM_ID = route.snapshot.params['roomID'];\n\n    this.mySelf = new User('unknown-user');\n\n    this.gameController = GameController.createInstance(this.mySelf);\n    this.gameModel = this.gameController.getModel();\n\n    this.chatList = ChatContainer.getInstance();\n    this.users = UserContainer.getInstance();\n  }\n\n  selectWord(idx: string): void {\n    if (this.gameModel.myTurn && parseInt(idx) >= 0 && parseInt(idx) < 3) {\n      this.socket.emit('game-msg', idx); //0, 1, 2 사이 인덱스\n    }\n  }\n\n  gameStart(): void {\n    if (\n      this.setRound > 0 &&\n      this.setRound < 5 &&\n      this.setTimeout > 5 &&\n      this.setTimeout < 180\n    ) {\n      let gameSetting = {\n        type: 'start',\n        data: {\n          round: this.setRound,\n          timeout: this.setTimeout,\n        },\n      };\n      if (!this.gameModel.isInGame) {\n        this.socket.emit('game-cmd', gameSetting);\n      }\n    } else {\n      alert('라운드는 1~4, 제한시간은 6~179초 이내로 입력해주세요');\n    }\n  }\n\n  initInstances(reason) {\n    if (reason) {\n      //console.log('disconnected');\n      //console.log(reason);\n    }\n    this.gameController.init();\n    this.gameModel.init(this.mySelf);\n    this.chatList.init();\n    this.users.init();\n  }\n\n  connect() {\n    if (this.socket && this.socket.connected) {\n      this.socket.disconnect();\n    }\n    // this.socket = io('ws://172.30.1.20:9999');\n    // this.socket = io('ws://localhost:9999');\n    this.socket = io('ws://catchm1nd.herokuapp.com/');\n\n    this.initInstances(null);\n\n    //console.log(this.socket);\n    this.socket.on('connect', () => {\n      //console.log('connect');\n      this.join();\n\n      this.socket.on(\n        'draw cmd',\n        function (msg) {\n          if (!this.gameModel.myTurn) {\n            CanvasController.getInstance().msgHandler(msg);\n          }\n        }.bind(this)\n      );\n\n      // this.socket.on('disconnect', this.initInstances);\n\n      this.socket.on('sys-msg', (msg) => {\n        // 1. 호스트 변경\n        if (msg.type == 'host-changed') {\n          this.hostUser = msg.data;\n          this.isHost = this.hostUser == this.myName;\n          this.chatList.push(\n            Chat.SysMsg('방의 호스트가 ' + msg.data + '로 변경되었습니다.')\n          );\n        } else if (msg.type == 'user-welcome') {\n          // 새로온 유저 - 기존 게임 State 복원\n          //TODO 그림이미지도 복원받기\n          // msg.data { host: string, entireUsers: user[]}\n          //console.log('restore', 'sys-msg : user-welcome received!!');\n          //console.log('restore', msg.data);\n          this.hostUser = msg.data.host;\n          this.isHost = this.hostUser == this.myName;\n          this.users.restoreUsers(msg.data.users);\n        } else if (msg.type == 'user-join') {\n          // 유저 접속\n          //console.log('userjoin' + msg.data);\n          if (msg.data != this.gameModel.mySelf.getName()) {\n            this.users.add(new User(msg.data));\n          }\n          this.chatList.push(Chat.SysMsg(msg.data + '가 입장했습니다.'));\n        } else if (msg.type == 'user-leave') {\n          // 유저 msg.data가 나감\n          // 삭제\n          //console.log('userleave ' + msg.data);\n          this.users.leaveUser(msg.data);\n          this.chatList.push(Chat.SysMsg(msg.data + '가 게임을 떠났습니다.'));\n        } else if (msg.type == 'room-not-found') {\n          //존재하지 않는 방에 입장한 경우\n          alert('존재하지 않는 방입니다.');\n          this.router.navigateByUrl(`/`);\n        } else if (msg.type == 'kick') {\n          alert('추방 당했습니다.');\n          this.router.navigateByUrl(`/`);\n        }\n      });\n\n      this.socket.on('chat-msg', (msg) => {\n        this.chatList.push(Chat.UserMsg(msg.from, msg.data));\n      });\n\n      this.socket.on(\n        'game-msg',\n        function (msg) {\n          // //console.log(msg);\n          this.gameController.msgHandler(msg);\n        }.bind(this)\n      );\n      this.socket.on(\n        'game-sync',\n        function (msg) {\n          this.gameController.transition(msg);\n        }.bind(this)\n      );\n    });\n  }\n  ngOnInit(): void {\n    this.initInstances(null);\n    this.checkboxGroupForm = this.formBuilder.group({\n      publicRoom: true,\n    });\n  }\n  setRoomSearchable() {\n    ////console.log(this.checkboxGroupForm.value.publicRoom);\n    this.socket.emit('searchOpt', !this.checkboxGroupForm.value.publicRoom);\n  }\n}\n","<div class=\"row justify-content-between\">\n  <div class=\"col-9 pad\">\n    <h3>\n      <span class=\"badge bg-dark\">Room{{ ROOM_ID }}</span> \n      <span class=\"badge bg-secondary\" style=\"margin-left: 10px;\">{{ myName }}</span>\n    </h3>\n  </div>\n  <div class=\"col-auto\">\n    <h4 *ngIf=\"gameModel.timerRun\">⏳ {{ gameModel.remainTime }}</h4>\n  </div>\n</div>\n\n<div\n  *ngIf=\"isHost && !gameModel.isInGame\"\n  id=\"host-section\"\n  class=\"pad\"\n  style=\"margin-bottom: 7px; margin-top: 7px\"\n>\n  <div\n    style=\"\n      border: 1px solid lightgray;\n      background-color: whitesmoke;\n      padding: 5px;\n    \"\n    class=\"row g-2 justify-content-end align-items-center\"\n  >\n    <label\n      [formGroup]=\"checkboxGroupForm\"\n      class=\"form-check-label col-auto\"\n      style=\"margin: 0px\"\n      ngbButtonLabel\n    >\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        formControlName=\"publicRoom\"\n        ngbButton\n        (click)=\"setRoomSearchable()\"\n      />\n      방 검색 허용\n    </label>\n\n    <label for=\"game-round\" class=\"col-auto\">라운드</label>\n    <input\n      [(ngModel)]=\"setRound\"\n      name=\"game-round\"\n      type=\"text\"\n      class=\"form-control btn-sm col-4 col-md-1\"\n      id=\"game-round\"\n      value=\"2\"\n    />\n\n    <label for=\"game-timeout\" class=\"col-auto\">제한시간</label>\n    <input\n      [(ngModel)]=\"setTimeout\"\n      name=\"game-timeout\"\n      type=\"text\"\n      class=\"form-control btn-sm col-4 col-md-2\"\n      id=\"game-timeout\"\n      value=\"20\"\n      placeholder=\"초 단위로 입력\"\n    />\n    <button\n      (click)=\"gameStart()\"\n      type=\"submit\"\n      class=\"btn btn-primary btn-sm col-auto\"\n      style=\"margin-left: 10px\"\n    >\n      게임 시작\n    </button>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-12 col-md-12 col-lg-2 pad\" style=\"margin-top: 7px\">\n    <app-sidebar\n      [users]=\"users\"\n      [hostUser]=\"hostUser\"\n      [mySelf]=\"mySelf\"\n      style=\"padding: 0px; background-color: whitesmoke\"\n    ></app-sidebar>\n  </div>\n  <div\n    class=\"col-12 col-md-8 col-lg-7 pad\"\n    style=\"height: 100%; margin-top: 7px\"\n  >\n    <div id=\"word-section\" class=\"row justify-content-center\">\n      <div\n        *ngIf=\"gameModel.myTurn && gameModel.isPrepare\"\n        id=\"word-select\"\n        class=\"col-auto\"\n        style=\"padding-top: 7px\"\n      >\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary\"\n            (click)=\"selectWord('0')\"\n          >\n            {{ gameModel.words[0] }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary\"\n            (click)=\"selectWord('1')\"\n          >\n            {{ gameModel.words[1] }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary\"\n            (click)=\"selectWord('2')\"\n          >\n            {{ gameModel.words[2] }}\n          </button>\n        </div>\n      </div>\n      <h3\n        class=\"col-auto\"\n        *ngIf=\"gameModel.myTurn && gameModel.isGuess\"\n        style=\"padding-top: 7px\"\n      >\n        {{ gameModel.word }}\n      </h3>\n      <h2\n        class=\"col-auto\"\n        *ngIf=\"!gameModel.myTurn && gameModel.isGuess\"\n        style=\"padding-top: 7px\"\n      >\n        {{ gameModel.wordSecret }}\n      </h2>\n    </div>\n\n    <app-canvas [gameModel]=\"gameModel\" [socket]=\"socket\"></app-canvas>\n  </div>\n  <div class=\"col-12 col-md-4 col-lg-3 pad\" style=\"margin-top: 7px\">\n    <app-chat [chatContainer]=\"chatList\" [socket]=\"socket\"></app-chat>\n  </div>\n</div>\n\n<ng-template #nickNameRequiredModal let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\" id=\"exampleModalLabel\">닉네임을 설정해 주세요!</h5>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"nick-name\" class=\"col-form-label\">닉네임 :</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"nick-name\"\n          [(ngModel)]=\"setNickName\"\n          name=\"first\"\n        />\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeModal()\">\n      설정\n    </button>\n  </div>\n</ng-template>\n<button\n  class=\"btn btn-primary btn-sm\"\n  (click)=\"openModal(nickNameRequiredModal)\"\n>\n  닉네임 설정\n</button>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { GameController } from '../game-controller';\nexport abstract class State {\n  protected controller: GameController;\n  constructor(c: GameController) {\n    this.controller = c;\n  }\n  abstract onMessage(msg): void;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}